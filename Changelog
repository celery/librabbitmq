.. _changelog:

================
 Change history
================

.. contents::
    :local:

Next Release
============

- Add support for ``Connection.connect_timeout`` parameter


.. _version-2.0.0:

2.0.0
=====
:release-date: 2018-01-19

- rabbitmq-c submodule is moved from https://github.com/ask/rabbitmq-c.git to official repository 
  https://github.com/alanxz/rabbitmq-c and version is bumped to version 0.8.0 (caad0ef1533783729c7644a226c989c79b4c497b)

- rabbitmq-codegen submodule is removed

- Added support of cPython 3.4, 3.5, 3.6

- Dropped support of cPython <= 2.6

- librabbitmq is calling callback function with payload as memoryview instead of old style buffer

- Library six is added as a requirement

- Updated unittests and benchmark. Removed dependency to nose library.

- AMQP client properties are exposed when connecting to RMQ broker

- Empty message bodies are allowed

- In recv, make sure all frames are read from the same channel


1.6.1
=====
:release-date: 2014-11-17 02:45 P.M UTC

- ``setup.py install`` is now forced to always call ``setup.py build`` first.


.. _version-1.6.0:

1.6.0
=====
:release-date: 2014-11-17 02:00 P.M UTC

- Bundles ``rabbitmq-c`` 0.5.3dev (185ce081e3efc846b476995b7da7297bb0eec82c)

- Bundles ``rabbitmq-codegen`` 3.4.1.

- Now builds on macOS Yosemite.

.. _version-1.5.2:

1.5.2
=====
:release-date: 2014-05-28 05:00 P.M UTC

- AMQP Array type now also supports tuples and other iterables.

    Internally the ``PyIter_*`` interface is used instead of ``PyList_*``.

- AMQP arrays and tables now supports :const:`None`.

- ``Channel.queue_declare`` now returns :class:`amqp.protocol.queue_declare_ok_t`.

- ``drain_events`` now handles connection close and channel close frames
  (Issue #30).

- Now using ``amqp_maybe_release_buffers_on_channel`` for channel based
  operations so that only the buffers related to that channel is released.

.. _version-1.5.1:

1.5.1
=====
:release-date: 2014-05-06 01:00 P.M UTC
:release-by: Ask Solem

- Fixed problem with compilation on Linux where `-lrt` is required.

    Fix contributed by Roger Hu.

.. _version-1.5.0:

1.5.0
=====
:release-date: 2014-04-14 09:00 P.M UTC
:release-by: Ask Solem

- Updated to use rabbitmq-c 0.5.0

- Now supports ``Connection.server_properties``.

- Now compiles on LLVM/clang and macOS Mavericks by removing the
  ``--mno-fused-madd`` option set by some Python installations.

- Fixes possible memory leak in ``basic_publish`` (Issue #38).

- ``Connection.fileno()`` now raises ``ValueError`` if the connection is
  disconnected (Issue #39).

- ``exchange_delete`` now ignores ``nowait`` argument.

.. _version-1.0.3:

1.0.3
=====
:release-date: 2013-11-15 11:00 P.M UTC

- Fixed installation problem on macOS 10.9

.. _version-1.0.2:

1.0.2
=====
:release-date: 2013-10-25 11:00 P.M UTC

- "Bad Frame Read" is now ConnectionError, not ChannelError.

- Fixed problem with basic_cancel when disconnected.

- Fixed typo Channel.recover -> Channel.basic_recover

.. _version-1.0.1:

1.0.1
=====
:release-date: 2013-01-14 02:10 P.M UTC

- ``queue_unbind`` argument ``binding_key`` renamed to ``routing_key``
  (Issue #16).

    This change ensures compatibility with :mod:`amqp`.

- Fixed memory leak caused by double call to ``AMQPTable_toPyDict``
  (Issue #15).

    Fix contributed by Eric Siegel.

- Fixed several potential memory leaks (Issue #15).

    Fix contributed by Marcus Cobden.

- Removed `-ansi` compile option (Issue #17).

.. _version-1.0.0:

1.0.0
=====
:release-date: 2012-11-02 5:00 P.M UTC

- A channel exception will now cause the channel to be revived instead of
  simply closing the connection.

- Support for lists and dictionaries in header values.

    This also means that the RabbitMQ `Bcc` and `CC` header extensions now can
    be constructured.

    Contributed by C Anthony Risinger.

- Support for float/double in header values.

- Adds dummy ``nowait`` argument to ``queue_delete`` for amqplib API
  compatibility (it has no effect).

- Library errors now use the correct error strings (Issue #7).

.. _version-0.9.9:

0.9.9
=====
:release-date: 2012-07-23 08:50 P.M BST

- More llvm-gcc fixes for macOS.

.. _version-0.9.8:

0.9.8
=====
:release-date: 2012-07-23 07:10 P.M BST

- Fixes bug when compiled using :program:`llvm-gcc` on macOS (Issue #5).

.. _version-0.9.7:

0.9.7
=====
:release-date: 2012-07-23 02:30 P.M BST

- Connection and channel errors now close the connection,
  so that connection/channel cannot be used.

    Before an operation on a connection/channel that previously raised
    an exception would just hang.

    In the future it may be possible to have channel errors only close
    the channel, but this keeps it simple for now (and it works like amqplib).

.. _version-0.9.6:

0.9.6
=====
:release-date: 2012-06-13 11:25 P.M BST

- Fixes problem with basic_publish and kombu.

.. _version-0.9.5:

0.9.5
=====
:release-date: 2012-06-07 12:20 P.M BST

- Now supports 'arguments' for:

    - basic_consume
    - exchange_declare
    - queue_declare
    - queue_bind
    - queue_unbind

- Release buffers after every command, so that memory
  does not grow on operations like ``basic_cancel``.

- Now uses buffer instead of PyString_Join.

- basic_consume now returns consumer tag.

- Now compiles with -Wall -ansi -pedantic.

- The message callback is now called from the C stack,
  so that drain_events does not return control back to the Python interpreter.

  Calling the callback from the same stack as slurping the socket enables
  us to pass the memory directly to the callback as a buffer object.

- When receiving messages we now only allocate memory once for single frame
  payloads.

    For multiple frames we no longer create temporary PyString's,
    but instead just memcpy the contents to a single string buffer.

- Adds amqp methods:

    - basic_cancel
    - flow
    - recover

- Now using array.array to keep track of unused channel id's.

- Internally the C Connection object now consistently have the channel
  as the first argument for all channel related methods.

- Fixed compiler warning in basic.qos

- frame_max, channel_max and heartbeat values are now updated
  to the values received from connection_tune_ok.

- basic_recv now raises socket.timeout directly, so that don't
  have to reraise.

- Unicode support.

.. _version-0.9.3:

0.9.3
=====
:release-date: 2012-05-22 06:40 P.M BST

- Patches memory leak.

- Use ``_PyString_Join`` to concat body parts.

.. _version-0.9.2:

0.9.2
=====
:release-date: 2012-05-21 09:00 P.M BST
:by: Ask Solem

- Fixes installation problem.

.. _version-0.9.1:

0.9.1
=====
:release-date: 2012-05-21 08:00 P.M BST
:by: Ask Solem

- Fixes installation problem.

.. _version-0.9.0:

0.9.0
=====
:release-date: 2012-05-21 05:30 P.M BST
:by: Ask Solem

- This project has been renamed to **librabbitmq**

    - New download url: http://pypi.python.org/pypi/librabbitmq/

    - New repository url:  http://github.com/celery/librabbitmq/

- No longer depends on rabbitmq-c as it is included and built with
  this distribution.

- Now supports non-blocking I/O:

    - New method: ``Connection.fileno()``

    - drain_events(timeout=0.0) is now non-blocking.

- Fixed typo noack -> no_ack

- Do not select connection if frames are already enqueued.

- Now supports queue_delete and exchange_delete.

.. _version-0.5.0:

0.5.0
=====
:release-date: 2011-12-07 05:00 P.M GMT
:by: Ask Solem

- Adds header support.

    Application headers can be added to ``properties["headers"]``.

    - Sending messages:

        - Supported
            - int
            - str  (not Unicode).

        - Unsupported
            - everything else. (see read).

    - Receiving messages:

        - Supported
            - boolean: bool
            - signed int: i8, i16, i32, i64
            - unsigned int: u8, u16, u32, u64
            - float: f32
            - double: f64
            - string: bytes

        - Unsupported
            - array
            - timestamp
            - table
            - void
            - decimal

.. _version-0.4.1:

0.4.1
=====
:release-date: 2011-09-27 14:00 P.M BST
:by: Ask Solem

- The GIL was not released while waiting for events.

   Fix contributed by Andrew Snowden.

- ``drain_events`` would wait for socket events, even though
  data was already buffered in client.

   Fix contributed by Andrew Snowden.

.. _version-0.4.0:

0.4.0
=====
:release-date: 2011-09-02 18:00 P.M BST

- Adds timeout support to `drain_events`.

  Timeout in seconds as a float, or :const:`None` for no timeout.

.. _version-0.3.0:

0.3.0
=====
:release-date: 2011-07-28 04:00 P.M BST

- Adds support for ``basic_reject``, and ``basic_qos`` (Issue #1).

.. _version-0.0.1:

0.0.1
=====
:release-date: NOT RELEASED
:branch: master

- Initial release
